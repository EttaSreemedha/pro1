{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreem\\\\Downloads\\\\connect1\\\\connect1\\\\connect\\\\mern-frontend\\\\src\\\\components\\\\UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [result, setResult] = useState('');\n  const {\n    modelType\n  } = useParams();\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    setPreviewUrl(URL.createObjectURL(file));\n    console.log('File selected:', file);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    console.log('Submitting form data:', formData);\n    try {\n      const response = await axios.post(`http://127.0.0.1:5000/predict/${modelType}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Response received:', response);\n      if (modelType === 'deep-learning') {\n        setResult(response.data.predicted_class);\n      } else if (modelType === 'llm') {\n        setResult(response.data.caption);\n      }\n    } catch (error) {\n      console.error('Error uploading the file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), previewUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewUrl,\n      alt: \"Selected\",\n      style: {\n        marginTop: '20px',\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }, this), result && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: modelType === 'deep-learning' ? `Predicted Class: ${result}` : `Caption: ${result}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadImage, \"7XlRccDAmLJJxlJmwTGAYzAirZg=\", false, function () {\n  return [useParams];\n});\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","axios","useParams","jsxDEV","_jsxDEV","UploadImage","_s","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","result","setResult","modelType","handleFileChange","event","file","target","files","URL","createObjectURL","console","log","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","predicted_class","caption","error","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","marginTop","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/sreem/Downloads/connect1/connect1/connect/mern-frontend/src/components/UploadImage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './styles.css';  \r\n\r\nconst UploadImage = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [previewUrl, setPreviewUrl] = useState(null);\r\n    const [result, setResult] = useState('');\r\n    const { modelType } = useParams();\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setSelectedFile(file);\r\n        setPreviewUrl(URL.createObjectURL(file));\r\n        console.log('File selected:', file);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', selectedFile);\r\n\r\n        console.log('Submitting form data:', formData);\r\n\r\n        try {\r\n            const response = await axios.post(`http://127.0.0.1:5000/predict/${modelType}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            console.log('Response received:', response);\r\n            if (modelType === 'deep-learning') {\r\n                setResult(response.data.predicted_class);\r\n            } else if (modelType === 'llm') {\r\n                setResult(response.data.caption);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error uploading the file:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n                <button type=\"submit\">Upload</button>\r\n            </form>\r\n            {previewUrl && <img src={previewUrl} alt=\"Selected\" style={{ marginTop: '20px', maxWidth: '100%' }} />}\r\n            {result && <h2>{modelType === 'deep-learning' ? `Predicted Class: ${result}` : `Caption: ${result}`}</h2>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}